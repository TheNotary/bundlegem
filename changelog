** Planned 0.1.x **
  - TBD
  - Bugfix: Changes working directory before running bootstrap_commands

** 0.1.0 **
  - Feature: Drops .bundlegem file in favor of bundlegem.yml in templates
  - Feature: Introduces `--to-template` switch to add a `.tt` extension to all files in the current directory
  - Feature: Enables execution of bootstrap_commands listing in bundlegem.yml
  - Feature: Cleans out built-in templates in favor of externally managed templates
  - Bugfix:  Prevents creation of template files that are gitignored

** 1.0.0 **
  - Feature: Greatly expands the template interpolation values
  - Bugfix: misc cleanup

** 0.0.14 **
  - Bugfix:  The project didn't work with ruby 3 due to use of the method `exists?`???

** 0.0.13 **
  - Adds new built-in java template

** 0.0.12 **
  - Feature:  File mode (permissions) is now cloned from source template file's permissions to dest
  - Bugfix: project names may now contain hyphens
  - Feature:  java project template added to best templates
  - Feature:  python project template added to best templates

** 0.0.11 **
  - Bugfix: config[:bundler_version] was listing the version of bundlegem not bundler

** 0.0.10 **
  - Feature: tweaks built-in templates

** 0.0.9 **
  - Bugfix:  there were misconfigurations with the Rakefiles for cli_gems and c_ect gems that were corrected
  - Feature: `--version` option added

** 0.0.8 **

  - Bugfix: fixes bug where git clone was attempted even when the a clone
    already took place in a prior run
  - Bugfix: fixes bug where I thought I was using something cool like figaro
    but was not
  - Bugfix: fixes bug where configuration wasn't loaded before running
    --install-public-templates
  - Bugfix:  fixes bug where require pry was left in

** 0.0.7 **

  - Feature:  Ability to load templates from github via --install-public-templates
  - Feature:  Make each user defined gem have a subfolder that is the exact
    project structure, so the readme for the gem can exist without fear of it
    being copied into new projects
  - Feature:  Gem's display names are based on what's specified in their
    respective root .bundlegem
  - Feature:  Allow better CLI parsing so -t t_name can be the first couple
    arguments or at the end
  - Bugfix: cli_gem and c_ext_gem now show up in the list
  - Bugfix: cli_gem and c_ext_gem had typos fixed

** 0.0.6 **
    - Feature:  List now indicates default template
    - CORE:  Created TemplateManager for working with templates
    - BUG:  Accidentally tracked in a test gem project and fixed tests to not
      change directory into a test area for creating new gems.
    - BUG:  newgem template didn't have a dot in .gitignore.tt

** 0.0.5 **
  - Bug in 0.0.3 that broke building template gems fixed
    * Template Directories part of code was being skipped for built in templates, but not all of it
  - Bug where sub directories were not being explicitly created
  - Added integration test just to make sure the built-in templates can be generated without problems
  - Cleaned up internal API and how the binary works

** 0.0.4 **
  - Tell the user what files are being created
  - Created config['git_repo_url'] variable to be used in templates

** 0.0.3 **
    - CMD:  --list to list templates (with descriptions)
    - Raise error when project name already exists, do not overwrite!
    - Raises error if none of the files in the template directory end in .tt
    - Create even empty folders

** 0.0.2 **
    - Added default gem template 'service'
    - Better syntax of bundlegem gem_name -t template_name
    - CMD:  --help to display a help message

** 0.0.1 **
  - Very basic prototype that allows you to specify templates in
    ~/.bundlegem/templates
